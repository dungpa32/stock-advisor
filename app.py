import streamlit as st
from vnstock import Vnstock
import pandas as pd
from datetime import datetime
import utils
import ui
from prophet import Prophet
import prophet

st.set_page_config(
    page_title="Ph√¢n t√≠ch Ch·ª©ng kho√°n Vi·ªát Nam",
    page_icon="üìà",
    layout="wide"
)

st.title("D·ªØ li·ªáu L·ªãch s·ª≠ Ch·ª©ng kho√°n Vi·ªát Nam")

# Hi·ªÉn th·ªã sidebar v√† l·∫•y tham s·ªë ƒë·∫ßu v√†o
stock_symbol, start_date, end_date, rsi_period, macd_fast, macd_slow, macd_signal, submit = ui.display_sidebar()

# X·ª≠ l√Ω khi nh·∫•n n√∫t "Hi·ªÉn th·ªã k·∫øt qu·∫£"
if submit:
    st.write(f"ƒêang ph√¢n t√≠ch d·ªØ li·ªáu cho m√£ {stock_symbol} t·ª´ {start_date} ƒë·∫øn {end_date}")
    
    try:
        start_str = start_date.strftime("%Y-%m-%d")
        end_str = end_date.strftime("%Y-%m-%d")
        
        with st.spinner('ƒêang t·∫£i d·ªØ li·ªáu...'):
            df = Vnstock().stock(symbol=stock_symbol, source='VCI')
            history = df.quote.history(start=start_str, end=end_str)

        if history is not None and not history.empty:
            with st.spinner('ƒêang t√≠nh to√°n c√°c ch·ªâ b√°o k·ªπ thu·∫≠t...'):
                # T√≠nh to√°n c√°c ch·ªâ b√°o k·ªπ thu·∫≠t
                history['RSI'] = utils.calculate_rsi(history, rsi_period)
                history['MACD'], history['Signal'] = utils.calculate_macd(history, macd_fast, macd_slow, macd_signal)
                history['MACD_Histogram'] = history['MACD'] - history['Signal']
                history['EMA20'] = utils.calculate_ema(history, 20)
                history['EMA50'] = utils.calculate_ema(history, 50)
                history['BB_Upper'], history['BB_Middle'], history['BB_Lower'] = utils.calculate_bollinger_bands(history)
                history['EMA9'] = utils.calculate_ema(history, 9)
                history['VWAP'] = utils.calculate_vwap(history)
                
                # T·∫°o t√≠n hi·ªáu giao d·ªãch
                signals = utils.generate_rsi_macd_signals(history)
                history = pd.concat([history, signals], axis=1)
            
            with st.spinner('ƒêang th·ª±c hi·ªán d·ª± ƒëo√°n gi√°...'):
                # D·ª± ƒëo√°n v·ªõi Prophet
                prophet_df = history[['time', 'close']].rename(columns={'time': 'ds', 'close': 'y'})
                model = Prophet(yearly_seasonality=True, weekly_seasonality=True, daily_seasonality=True)
                model.fit(prophet_df)
                future = model.make_future_dataframe(periods=30)  # D·ª± ƒëo√°n 30 ng√†y ti·∫øp theo
                forecast = model.predict(future)
            
            # Hi·ªÉn th·ªã k·∫øt qu·∫£
            ui.display_results(history, stock_symbol, start_date, end_date, forecast)
        
        else:
            st.warning(f"Kh√¥ng t√¨m th·∫•y d·ªØ li·ªáu cho m√£ {stock_symbol} trong kho·∫£ng th·ªùi gian n√†y.")
    
    except Exception as e:
        st.error(f"ƒê√£ x·∫£y ra l·ªói khi l·∫•y d·ªØ li·ªáu: {str(e)}")
        st.write("Vui l√≤ng ki·ªÉm tra l·∫°i m√£ ch·ª©ng kho√°n ho·∫∑c k·∫øt n·ªëi.")
else:
    st.info("Vui l√≤ng nh·∫≠p m√£ ch·ª©ng kho√°n v√† ch·ªçn kho·∫£ng th·ªùi gian, sau ƒë√≥ nh·∫•n 'Hi·ªÉn th·ªã k·∫øt qu·∫£'")

# Footer
st.markdown("---")
st.write(f"C·∫≠p nh·∫≠t l·∫ßn cu·ªëi: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
st.markdown(f"Powered by Streamlit, Vnstock, Prophet={prophet.__version__} v√† c√°c th∆∞ vi·ªán ph√¢n t√≠ch k·ªπ thu·∫≠t")
